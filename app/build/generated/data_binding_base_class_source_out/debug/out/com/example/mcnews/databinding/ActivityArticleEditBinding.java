// Generated by view binder compiler. Do not edit!
package com.example.mcnews.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ScrollView;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mcnews.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityArticleEditBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnDelete;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final EditText etBody;

  @NonNull
  public final EditText etTitle;

  @NonNull
  public final Spinner spAuthor;

  @NonNull
  public final Spinner spStatus;

  private ActivityArticleEditBinding(@NonNull ScrollView rootView, @NonNull Button btnDelete,
      @NonNull Button btnSave, @NonNull EditText etBody, @NonNull EditText etTitle,
      @NonNull Spinner spAuthor, @NonNull Spinner spStatus) {
    this.rootView = rootView;
    this.btnDelete = btnDelete;
    this.btnSave = btnSave;
    this.etBody = etBody;
    this.etTitle = etTitle;
    this.spAuthor = spAuthor;
    this.spStatus = spStatus;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityArticleEditBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityArticleEditBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_article_edit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityArticleEditBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDelete;
      Button btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btnSave;
      Button btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.etBody;
      EditText etBody = ViewBindings.findChildViewById(rootView, id);
      if (etBody == null) {
        break missingId;
      }

      id = R.id.etTitle;
      EditText etTitle = ViewBindings.findChildViewById(rootView, id);
      if (etTitle == null) {
        break missingId;
      }

      id = R.id.spAuthor;
      Spinner spAuthor = ViewBindings.findChildViewById(rootView, id);
      if (spAuthor == null) {
        break missingId;
      }

      id = R.id.spStatus;
      Spinner spStatus = ViewBindings.findChildViewById(rootView, id);
      if (spStatus == null) {
        break missingId;
      }

      return new ActivityArticleEditBinding((ScrollView) rootView, btnDelete, btnSave, etBody,
          etTitle, spAuthor, spStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
